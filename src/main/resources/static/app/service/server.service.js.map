{"version":3,"sources":["app/service/server.service.js","app/service/server.service.ts"],"names":["System","register","exports_1","context_1","core_1","http_1","Observable_1","ServerService","__decorate","this","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__metadata","k","v","metadata","id","setters","core_1_1","http_1_1","Observable_1_1","_1","_2","execute","http","Server","GETRandomNumber","GETResortProximity","prototype","getRandomNumber","get","map","res","json","error","Observable","extractData","body","getProximityResorts","position","coords","latitude","longitude","handleError","errMsg","Response","err","JSON","stringify","status","statusText","message","toString","console","Injectable","Http"],"mappings":"AAAAA,OAAOC,UAAU,gBAAiB,gBAAiB,kBAAmB,UAAW,+BAAgC,SAAUC,EAAWC,GAClI,YACA,IAUIC,GAAQC,EAAQC,EAAcC,EAV9BC,EAAcC,MAAQA,KAAKD,YAAe,SAAUE,EAAYC,EAAQC,EAAKC,GAC7E,GAA2HC,GAAvHC,EAAIC,UAAUC,OAAQC,EAAIH,EAAI,EAAIJ,EAAkB,OAATE,EAAgBA,EAAOM,OAAOC,yBAAyBT,EAAQC,GAAOC,CACrH,IAAuB,gBAAZQ,UAAoD,kBAArBA,SAAQC,SAAyBJ,EAAIG,QAAQC,SAASZ,EAAYC,EAAQC,EAAKC,OACpH,KAAK,GAAIU,GAAIb,EAAWO,OAAS,EAAGM,GAAK,EAAGA,KAAST,EAAIJ,EAAWa,MAAIL,GAAKH,EAAI,EAAID,EAAEI,GAAKH,EAAI,EAAID,EAAEH,EAAQC,EAAKM,GAAKJ,EAAEH,EAAQC,KAASM,EAChJ,OAAOH,GAAI,GAAKG,GAAKC,OAAOK,eAAeb,EAAQC,EAAKM,GAAIA,GAE5DO,EAAchB,MAAQA,KAAKgB,YAAe,SAAUC,EAAGC,GACvD,GAAuB,gBAAZN,UAAoD,kBAArBA,SAAQO,SAAyB,MAAOP,SAAQO,SAASF,EAAGC,GAEvFxB,IAAaA,EAAU0B,EAE1C,QACIC,SACI,SAAUC,GACN3B,EAAS2B,GAEb,SAAUC,GACN3B,EAAS2B,GAEb,SAAUC,GACN3B,EAAe2B,GAEnB,SAAUC,KAEV,SAAUC,MAGdC,QAAS,WCrBJ7B,EAAa,WACtB,QAAAA,GAAoB8B,GAAA5B,KAAA4B,KAAAA,EAEZ5B,KAAA6B,QACJC,gBAAiB,qBACjBC,mBAAoB,qBAkC5B,MA/BIjC,GAAAkC,UAAAC,gBAAA,WACI,MAAOjC,MAAK4B,KAAKM,IAAIlC,KAAK6B,OAAOC,iBAC5BK,IAAI,SAAAC,GAAO,MAASA,GAAIC,SADtBrC,SAEI,SAAAsC,GAAS,MAAAzC,GAAA0C,WAAA1C,SAAiByC,EAAMD,OAAOC,OAAS,mBAGvDxC,EAAAkC,UAAAQ,YAAR,SAAoBJ,GAClB,GAAIK,GAAOL,EAAIC,MACf,OAAOI,QAGT3C,EAAAkC,UAAAU,oBAAA,SAAoBC,GAChB,MAAO3C,MAAK4B,KAAKM,IAAIlC,KAAK6B,OAAOE,mBACvB,QAAUY,EAASC,OAAOC,SAAU,QAAUF,EAASC,OAAOE,UAAY,yBACzEX,IAAInC,KAAKwC,aAFbxC,SAGUA,KAAK+C,cAGlBjD,EAAAkC,UAAAe,YAAR,SAAqBT,GACpB,GAAIU,EACH,IAAIV,YAAiB1C,GAAAqD,SAAU,CAC7B,GAAMR,GAAOH,EAAMD,QAAU,GACvBa,EAAMT,EAAKH,OAASa,KAAKC,UAAUX,EACzCO,GAAYV,EAAMe,OAAM,OAAMf,EAAMgB,YAAc,IAAE,IAAIJ,MAExDF,GAASV,EAAMiB,QAAUjB,EAAMiB,QAAUjB,EAAMkB,UAGjD,OADAC,SAAQnB,MAAMU,GACPnD,EAAA0C,WAAA1C,SAAiBmD,IAG9BlD,KAvCaA,EAAaC,GADzBJ,EAAA+D,aD+De1C,EAAW,qBC7DGpB,EAAA+D,QADjB7D,GDgEDL,EAAU,gBAAiBK","file":"server.service.js","sourcesContent":["System.register([\"@angular/core\", \"@angular/http\", \"rxjs/Observable\", \"rxjs/Rx\", \"rxjs/add/operator/toPromise\"], function (exports_1, context_1) {\n    \"use strict\";\n    var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\n    };\n    var __metadata = (this && this.__metadata) || function (k, v) {\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n    };\n    var __moduleName = context_1 && context_1.id;\n    var core_1, http_1, Observable_1, ServerService;\n    return {\n        setters: [\n            function (core_1_1) {\n                core_1 = core_1_1;\n            },\n            function (http_1_1) {\n                http_1 = http_1_1;\n            },\n            function (Observable_1_1) {\n                Observable_1 = Observable_1_1;\n            },\n            function (_1) {\n            },\n            function (_2) {\n            }\n        ],\n        execute: function () {\n            ServerService = (function () {\n                function ServerService(http) {\n                    this.http = http;\n                    this.Server = {\n                        GETRandomNumber: '/get-random-number',\n                        GETResortProximity: '/resort-proximity'\n                    };\n                }\n                ServerService.prototype.getRandomNumber = function () {\n                    return this.http.get(this.Server.GETRandomNumber)\n                        .map(function (res) { return res.json(); })\n                        .catch(function (error) { return Observable_1.Observable.throw(error.json().error || 'Server error'); });\n                };\n                ServerService.prototype.extractData = function (res) {\n                    var body = res.json();\n                    return body || {};\n                };\n                ServerService.prototype.getProximityResorts = function (position) {\n                    return this.http.get(this.Server.GETResortProximity\n                        + '?lat=' + position.coords.latitude + '&lon=' + position.coords.longitude + '&unit=10&distance=100')\n                        .map(this.extractData)\n                        .catch(this.handleError);\n                };\n                ServerService.prototype.handleError = function (error) {\n                    var errMsg;\n                    if (error instanceof http_1.Response) {\n                        var body = error.json() || '';\n                        var err = body.error || JSON.stringify(body);\n                        errMsg = error.status + \" - \" + (error.statusText || '') + \" \" + err;\n                    }\n                    else {\n                        errMsg = error.message ? error.message : error.toString();\n                    }\n                    console.error(errMsg);\n                    return Observable_1.Observable.throw(errMsg);\n                };\n                return ServerService;\n            }());\n            ServerService = __decorate([\n                core_1.Injectable(),\n                __metadata(\"design:paramtypes\", [http_1.Http])\n            ], ServerService);\n            exports_1(\"ServerService\", ServerService);\n        }\n    };\n});\n","import {Injectable} from '@angular/core';\nimport {Http, Headers, Response} from '@angular/http';\nimport {Observable} from 'rxjs/Observable';\nimport 'rxjs/Rx';\nimport 'rxjs/add/operator/toPromise';\nimport {Common, Coordinate, Resort} from \"../common/common\";\n\n@Injectable()\nexport class ServerService {\n    constructor(private http: Http) {}\n\n    private Server = {\n        GETRandomNumber: '/get-random-number',\n        GETResortProximity: '/resort-proximity'\n    };\n\n    getRandomNumber(): Observable<number> {\n        return this.http.get(this.Server.GETRandomNumber)\n            .map(res => <number> res.json())\n            .catch(error => Observable.throw(error.json().error || 'Server error'))\n    }\n\n    private extractData(res: Response) {\n      let body = res.json();\n      return body || { };\n    }\n\n    getProximityResorts(position: Position): Observable<Resort[]> {\n        return this.http.get(this.Server.GETResortProximity\n                + '?lat=' + position.coords.latitude +'&lon=' + position.coords.longitude + '&unit=10&distance=100')\n                  .map(this.extractData)\n                  .catch(this.handleError);\n    }\n\n    private handleError (error: Response | any) {\n     let errMsg: string;\n      if (error instanceof Response) {\n        const body = error.json() || '';\n        const err = body.error || JSON.stringify(body);\n        errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\n      } else {\n        errMsg = error.message ? error.message : error.toString();\n      }\n      console.error(errMsg);\n      return Observable.throw(errMsg);\n    }\n\n}"]}